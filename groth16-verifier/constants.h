// #######################
// ### RISC0 CONSTANTS ###
// #######################

// vk
const unsigned char BYTES_ALPHA[32] = {226, 242, 109, 190, 162, 153, 245, 34, 59, 100, 108, 177, 251, 51, 234, 219, 5, 157, 148, 7, 85, 157, 116, 65, 223, 217, 2, 227, 167, 154, 77, 45};
const unsigned char BYTES_BETA[64] = {171, 183, 61, 193, 127, 188, 19, 2, 30, 36, 113, 224, 192, 139, 214, 125, 132, 1, 245, 43, 115, 214, 208, 116, 131, 121, 76, 173, 71, 120, 24, 14, 12, 6, 243, 59, 188, 76, 121, 169, 202, 222, 242, 83, 166, 128, 132, 211, 130, 241, 119, 136, 248, 133, 201, 175, 209, 118, 247, 203, 47, 3, 103, 9};
const unsigned char BYTES_GAMMA[64] = {237, 246, 146, 217, 92, 189, 222, 70, 221, 218, 94, 247, 212, 34, 67, 103, 121, 68, 92, 94, 102, 0, 106, 66, 118, 30, 31, 18, 239, 222, 0, 24, 194, 18, 243, 174, 183, 133, 228, 151, 18, 231, 169, 53, 51, 73, 170, 241, 37, 93, 251, 49, 183, 191, 96, 114, 58, 72, 13, 146, 147, 147, 142, 25};
const unsigned char BYTES_DELTA[64] = {51, 3, 62, 127, 234, 31, 64, 96, 78, 170, 207, 105, 157, 75, 233, 170, 204, 87, 112, 84, 160, 219, 34, 217, 18, 154, 23, 40, 255, 133, 160, 26, 28, 58, 248, 41, 182, 43, 244, 145, 76, 11, 207, 44, 129, 164, 189, 87, 113, 144, 239, 245, 241, 148, 238, 155, 172, 149, 250, 239, 213, 60, 176, 131};
const unsigned char BYTES_GAMMA_ABC[6][32] = {{228, 59, 220, 101, 93, 15, 157, 115, 5, 53, 85, 77, 156, 170, 97, 29, 221, 21, 44, 8, 26, 6, 169, 50, 168, 225, 213, 220, 37, 154, 172, 18}, {63, 66, 161, 136, 246, 131, 216, 105, 135, 60, 204, 76, 17, 148, 66, 229, 123, 5, 110, 3, 226, 250, 146, 242, 2, 140, 151, 188, 32, 185, 7, 7}, {71, 195, 15, 133, 68, 70, 151, 253, 244, 54, 227, 72, 113, 28, 1, 17, 21, 150, 63, 133, 81, 151, 36, 62, 75, 57, 230, 203, 226, 54, 202, 139}, {167, 242, 4, 46, 17, 249, 37, 90, 251, 182, 198, 226, 195, 172, 203, 136, 228, 1, 242, 170, 194, 28, 9, 124, 146, 179, 251, 219, 153, 249, 138, 27}, {13, 205, 108, 7, 90, 218, 110, 208, 221, 254, 206, 29, 74, 45, 0, 95, 97, 167, 213, 223, 11, 117, 193, 138, 91, 35, 116, 214, 78, 73, 95, 43}, {147, 212, 196, 177, 32, 3, 148, 213, 37, 60, 206, 47, 37, 165, 155, 134, 46, 232, 228, 205, 67, 104, 102, 3, 250, 160, 157, 93, 13, 60, 28, 143}};

// first two public inputs are constant
unsigned char BYTES_PUBLIC_INPUTS[5][32] = {{165, 22, 160, 87, 201, 251, 245, 98, 145, 6, 48, 9, 52, 212, 142, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {119, 93, 66, 48, 228, 30, 80, 51, 71, 202, 217, 111, 203, 222, 126, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},{81, 181, 74, 98, 242, 170, 89, 154, 239, 118, 135, 68, 201, 93, 232, 199, 216, 155, 247, 22, 225, 27, 17, 121, 240, 93, 108, 240, 188, 254, 182, 14 }};

// receipt claim tag, output tag, claim input
const unsigned char RECEIPT_CLAIM_TAG[] = {203, 31, 239, 205, 31, 45, 154, 100, 151, 92, 187, 191, 110, 22, 30, 41, 20, 67, 75, 12, 187, 153, 96, 184, 77, 245, 215, 23, 232, 107, 72, 175};
const unsigned char OUTPUT_TAG[] = {119, 234, 254, 179, 102, 167, 139, 71, 116, 125, 224, 215, 187, 23, 98, 132, 8, 95, 245, 86, 72, 135, 0, 154, 91, 230, 61, 163, 45, 53, 89, 212};
const unsigned char CLAIM_INPUT[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

// helper
const unsigned char ZEROS[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
const unsigned char TWO_U16[] = {2, 0};
const unsigned char FOUR_U16[] = {4, 0};
const unsigned char ZERO_U32[] = {0, 0, 0, 0};

// #########################
// ### CIRCUIT CONSTANTS ###
// #########################

const unsigned char CLAIM_PRE[] = {99, 98, 251, 215, 16, 88, 195, 165, 36, 53, 107, 206, 218, 117, 67, 237, 123, 210, 250, 213, 31, 58, 148, 52, 3, 213, 67, 74, 49, 96, 107, 84};

// #######################
// ### PROOF CONSTANTS ###
// #######################

// claim post
const unsigned char CLAIM_POST[] = {163, 172, 194, 113, 23, 65, 137, 150, 52, 11, 132, 229, 169, 15, 62, 244, 196, 157, 34, 199, 158, 68, 170, 216, 34, 236, 156, 49, 62, 30, 184, 226};

// proof
unsigned char BYTES_PROOF_A[32] = {142, 77, 237, 168, 85, 178, 192, 181, 219, 76, 227, 25, 253, 138, 204, 137, 58, 112, 144, 229, 84, 134, 252, 176, 106, 12, 100, 30, 59, 89, 253, 152};
unsigned char BYTES_PROOF_B[64] = {104, 19, 44, 178, 84, 211, 182, 82, 27, 244, 157, 127, 118, 102, 60, 240, 103, 11, 146, 55, 244, 137, 116, 250, 110, 110, 76, 119, 188, 178, 216, 38, 117, 62, 7, 26, 168, 11, 139, 36, 70, 114, 26, 34, 29, 101, 175, 197, 13, 232, 113, 171, 230, 50, 231, 0, 140, 87, 221, 156, 60, 128, 82, 13};
unsigned char BYTES_PROOF_C[32] = {19, 30, 120, 10, 165, 155, 6, 108, 227, 16, 255, 45, 53, 126, 23, 101, 227, 219, 194, 240, 94, 100, 129, 216, 184, 128, 149, 109, 139, 6, 169, 3};

// journal
unsigned char JOURNAL[] = {1, 0, 0, 0};
